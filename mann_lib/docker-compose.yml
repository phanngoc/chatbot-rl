version: '3.8'

services:
  mann-api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - MANN_API_HOST=0.0.0.0
      - MANN_API_PORT=8000
      - MANN_LOG_LEVEL=INFO
      - MANN_ENABLE_MONITORING=true
      - MANN_ENABLE_PAGER=true
      - MANN_PAGER_WEBHOOK=${PAGER_WEBHOOK_URL}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mann-monitor:
    build: .
    command: python -c "
      import time
      import requests
      while True:
        try:
          response = requests.get('http://mann-api:8000/health')
          if response.status_code != 200:
            print(f'Health check failed: {response.status_code}')
        except Exception as e:
          print(f'Health check error: {e}')
        time.sleep(60)
    "
    depends_on:
      - mann-api
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - mann-api
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:
